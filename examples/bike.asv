%% Import data from text file.
% Script for importing data from the following text file:
%
%    E:\Github\Conformal-Lasso\examples\2010-bike-4th.csv
%
% To extend the code to different selected data or a different text file,
% generate a function instead of a script.

% Auto-generated by MATLAB on 2016/07/12 14:43:30

%% Initialize variables.
filename = 'E:\Github\Conformal-Lasso\examples\2010-bike-4th.csv';
delimiter = ',';
startRow = 2;

%% Format string for each line of text:
%   column1: double (%f)
%	column2: double (%f)
%   column3: double (%f)
%	column4: double (%f)
% For more information, see the TEXTSCAN documentation.
formatSpec = '%f%f%f%f%[^\n\r]';

%% Open the text file.
fileID = fopen(filename,'r');

%% Read columns of data according to format string.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
dataArray = textscan(fileID, formatSpec, 'Delimiter', delimiter, 'EmptyValue' ,NaN,'HeaderLines' ,startRow-1, 'ReturnOnError', false);

%% Close the text file.
fclose(fileID);

%% Post processing for unimportable data.
% No unimportable data rules were applied during the import, so no post
% processing code is included. To generate code which works for
% unimportable data, select unimportable cells in a file and regenerate the
% script.

%% Allocate imported array to column variable names
Duration = dataArray{:, 1};
Startstation = dataArray{:, 2};
Endstation = dataArray{:, 3};
Bike = dataArray{:, 4};


%% Clear temporary variables
clearvars filename delimiter startRow formatSpec fileID dataArray ans;



% MY code
[~,~,ic]=unique(Endstation);
Endstation = ic;
[~,~,ic]=unique(Startstation);
Startstation = ic;
[~,~,ic]=unique(Bike);
Bike = ic;

M=length(unique(Bike));
p=length(unique(Startstation));
m=100;

data = zeros(M,p^2); Y=zeros(M,1);
for i=1:length(Bike)
    data(Bike(i),(Startstation(i)-1)*p+Endstation(i))=data(Bike(i),(Startstation(i)-1)*p+Endstation(i))+1;
    Y(Bike(i))=Y(Bike(i))+Duration(i);
end
    
sample = randsample(1:M,m);
X = data(sample,:);
Y = Y(sample);
test = setxor(1:M,sample);

incounter = 0;

for i=test
    xnew = data(i,:);
    y = Y;
    ytrial = [-2:0.001:2];
    [yconf,modelsize] = conformalLOO(X,Y,xnew,0.1,ytrial,.1);
    fprintf('Prediction interval is [%.3f,%.3f] with model size %d while real data is %.3f\n',...
        min(yconf),max(yconf),modelsize,y);
    if (min(yconf)<y)&&(y<max(yconf))
        incounter=incounter+1;
        fprintf('Real data is IN\n');
    else
        fprintf('Real data is OUT\n');
    end
end

fprintf('The coverage is %.2f\n',incounter/(m-30));


 
    
    
    
    
    
    
    
    








